import os
import socket
import urllib.parse

import docker
from twisted.internet import threads
from buildbot.worker import AbstractLatentWorker
from buildbot.plugins import (
    schedulers,
    steps,
    util,
)


class DockerSwarmLatentWorker(AbstractLatentWorker):
    def __init__(self, name, image):
        super().__init__(name, None)

        self.client = None
        self.service = None
        self.service_config = {
            "image": image,
            "env": {
                "BUILDMASTER": socket.gethostname(),
                "WORKERNAME": self.name,
                "WORKERPASS": self.password,
            },
        }

    def start_instance(self, build):
        def start():
            self.client = docker.from_env()
            self.service = self.client.services.create(**self.service_config)
            return self.service.short_id

        return threads.deferToThread(start)

    def stop_instance(self, fast=False):
        if self.service:
            return threads.deferToThread(self.service.remove)


def get_docker_host():
    DOCKER_HOST = os.environ.get("DOCKER_HOST")

    if DOCKER_HOST is not None:
        try:
            result = urllib.parse.urlparse(DOCKER_HOST)
            if result.netloc is not None:
                return result.netloc.split(":")[0]
        except ValueError:
            pass


def get_buildbot_url():
    hostname = get_docker_host() or "localhost"
    return f"http://{hostname}:8010/"


worker = DockerSwarmLatentWorker(
    "worker",
    "cjolowicz/buildbot-worker-example:1.8.0",
)

factory = util.BuildFactory([
    steps.Git(repourl="git://github.com/buildbot/hello-world.git", mode="incremental"),
    steps.ShellCommand(command=["trial", "hello"], env={"PYTHONPATH": "."}),
])

builder = util.BuilderConfig(
    name="hello-world",
    workernames=["worker"],
    factory=factory,
)

scheduler = schedulers.ForceScheduler(
    name="trigger",
    builderNames=["hello-world"]
)

BuildmasterConfig = {
    "workers": [worker],
    "protocols": {"pb": {"port": 9989}},
    "schedulers": [scheduler],
    "builders": [builder],
    "title": "Hello World CI",
    "titleURL": "https://buildbot.github.io/hello-world/",
    "buildbotURL": get_buildbot_url(),
    "www": {
        "port": 8010,
        "plugins": {
            "waterfall_view": {},
            "console_view": {},
            "grid_view": {},
        },
        "logfileName": None,  # do not use a separate logfile
    },
    "db": {"db_url": "sqlite:///state.sqlite"},
}
