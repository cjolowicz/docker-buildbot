import os
import socket

from buildbot.plugins import schedulers, steps, util
import docker


def create_worker(name, image):
    from buildbot.plugins import worker

    client = docker.from_env()

    try:
        client.ping()
    except Exception:
        return worker.LocalWorker(name)

    if client.swarm.attrs:
        return worker.DockerSwarmLatentWorker(name, image)

    return worker.DockerLatentWorker(
        name,
        None,
        docker_host="unix://var/run/docker.sock",
        image=image,
        masterFQDN=socket.gethostname(),
        hostconfig={"network_mode": f"container:{socket.gethostname()}"},
    )


def run(*args, **kwargs):
    return steps.ShellCommand(name=args[0], command=args, haltOnFailure=True, **kwargs)


worker = create_worker("worker", "cjolowicz/buildbot-worker:2.1.0")

factory = util.BuildFactory(
    [
        run("wget", "https://github.com/buildbot/hello-world/archive/master.tar.gz"),
        run("tar", "-zxf", "master.tar.gz"),
        run(
            "trial",
            "hello",
            env={"PYTHONPATH": "."},
            workdir="build/hello-world-master",
        ),
    ]
)

builder = util.BuilderConfig(
    name="hello-world", workernames=["worker"], factory=factory
)

scheduler = schedulers.ForceScheduler(name="trigger", builderNames=["hello-world"])

BuildmasterConfig = {
    "workers": [worker],
    "protocols": {"pb": {"port": 9989}},
    "schedulers": [scheduler],
    "builders": [builder],
    "title": "Hello World CI",
    "titleURL": "https://buildbot.github.io/hello-world/",
    "buildbotURL": os.environ.get("BUILDBOT_URL", "http://localhost:8010/"),
    "www": {
        "port": 8010,
        "plugins": {"waterfall_view": {}, "console_view": {}, "grid_view": {}},
    },
}
