import os
import socket

from buildbot.plugins import schedulers, steps, util, worker
import docker


def create_docker_worker(name, image):
    client = docker.from_env()
    if client.swarm.attrs:
        return worker.DockerSwarmLatentWorker(name, image)

    return worker.DockerLatentWorker(
        name,
        None,
        docker_host="unix://var/run/docker.sock",
        image=image,
        masterFQDN=socket.gethostname(),
        hostconfig={
            "network_mode": f"container:{socket.gethostname()}",
        },
    )


worker = create_docker_worker(
    "worker",
    "cjolowicz/buildbot-worker:2.1.0",
)

factory = util.BuildFactory([
    steps.ShellCommand(command=["wget", "https://github.com/buildbot/hello-world/archive/master.tar.gz"]),
    steps.ShellCommand(command=["tar", "-zxf", "master.tar.gz"]),
    steps.ShellCommand(command=["trial", "hello"], env={"PYTHONPATH": "."}, workdir="build/hello-world-master"),
])

builder = util.BuilderConfig(
    name="hello-world",
    workernames=["worker"],
    factory=factory,
)

scheduler = schedulers.ForceScheduler(
    name="trigger",
    builderNames=["hello-world"]
)

BuildmasterConfig = {
    "workers": [worker],
    "protocols": {"pb": {"port": 9989}},
    "schedulers": [scheduler],
    "builders": [builder],
    "title": "Hello World CI",
    "titleURL": "https://buildbot.github.io/hello-world/",
    "buildbotURL": os.environ.get("BUILDBOT_URL", "http://localhost:8010/"),
    "www": {
        "port": 8010,
        "plugins": {
            "waterfall_view": {},
            "console_view": {},
            "grid_view": {},
        },
    },
    "db": {"db_url": "sqlite:///state.sqlite"},
}
